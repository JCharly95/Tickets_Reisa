{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\Tickets_Reisa_React\\\\cliente\\\\src\\\\context\\\\obras\\\\obrasState.js\";\nimport React, { useReducer } from 'react';\nimport { v4 } from 'uuid';\nimport ObrasContext from './obrasContext';\nimport obrasReducer from './obrasReducer';\nimport { FORMULARIO_OBRA, OBTENER_OBRAS, AGREGAR_OBRAS, VALIDAR_FORMULARIO, OBRAS_ACTUALES } from '../../types/index';\n\nconst ObrasState = props => {\n  const initialState = {\n    obras: [],\n    formulario: false,\n    errorformulario: false,\n    obra: null\n  }; // dispatch parra ejecutar las acciones\n\n  const [state, dispatch] = useReducer(obrasReducer, initialState); // series de funciones para el CRUD\n\n  const mostrarObras = () => {\n    dispatch({\n      type: FORMULARIO_OBRA\n    });\n  };\n\n  const obras = []; // obtenerObras nueva obra\n\n  const obtenerObras = () => {\n    dispatch({\n      type: OBTENER_OBRAS,\n      payload: obras\n    });\n  }; // agregar una obra\n\n\n  const agregarObra = obra => {\n    // obtiene un id cada obra\n    obra.id = v4(); // insertar la obra en el state\n\n    dispatch({\n      type: AGREGAR_OBRAS,\n      payload: obra\n    });\n  }; // validar formulario\n\n\n  const mostrarError = () => {\n    dispatch({\n      type: VALIDAR_FORMULARIO\n    });\n  }; // selecciona el proyecto que el usuario hizo click\n\n\n  const obraActual = obraId => {\n    dispatch({\n      type: OBRAS_ACTUALES,\n      payload: obraId\n    });\n  }; // eliminar proyecto\n\n\n  const eliminarObra = obraId => {\n    dispatch;\n  };\n\n  return /*#__PURE__*/React.createElement(ObrasContext.Provider, {\n    value: {\n      obras: state.obras,\n      formulario: state.formulario,\n      errorformulario: state.errorformulario,\n      obra: state.obra,\n      mostrarObras,\n      obtenerObras,\n      agregarObra,\n      mostrarError,\n      obraActual,\n      eliminarObra\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default ObrasState;","map":{"version":3,"sources":["C:/Users/User/Documents/GitHub/Tickets_Reisa_React/cliente/src/context/obras/obrasState.js"],"names":["React","useReducer","v4","ObrasContext","obrasReducer","FORMULARIO_OBRA","OBTENER_OBRAS","AGREGAR_OBRAS","VALIDAR_FORMULARIO","OBRAS_ACTUALES","ObrasState","props","initialState","obras","formulario","errorformulario","obra","state","dispatch","mostrarObras","type","obtenerObras","payload","agregarObra","id","mostrarError","obraActual","obraId","eliminarObra","children"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,UAAd,QAA+B,OAA/B;AACA,SAAQC,EAAR,QAAiB,MAAjB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,SAAQC,eAAR,EAAyBC,aAAzB,EAAwCC,aAAxC,EAAuDC,kBAAvD,EAA2EC,cAA3E,QAEO,mBAFP;;AAIA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAExB,QAAMC,YAAY,GAAC;AACfC,IAAAA,KAAK,EAAC,EADS;AAEfC,IAAAA,UAAU,EAAE,KAFG;AAGfC,IAAAA,eAAe,EAAC,KAHD;AAIfC,IAAAA,IAAI,EAAC;AAJU,GAAnB,CAFwB,CASxB;;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBjB,UAAU,CAACG,YAAD,EAAeQ,YAAf,CAApC,CAVwB,CAYxB;;AACA,QAAMO,YAAY,GAAG,MAAI;AACrBD,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAACf;AADA,KAAD,CAAR;AAGH,GAJD;;AAKA,QAAMQ,KAAK,GAAG,EAAd,CAlBwB,CAoBxB;;AACA,QAAMQ,YAAY,GAAG,MAAI;AACrBH,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEd,aADD;AAELgB,MAAAA,OAAO,EAAET;AAFJ,KAAD,CAAR;AAIH,GALD,CArBwB,CA4BxB;;;AACA,QAAMU,WAAW,GAAGP,IAAI,IAAE;AACtB;AACAA,IAAAA,IAAI,CAACQ,EAAL,GAAUtB,EAAE,EAAZ,CAFsB,CAItB;;AACAgB,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAACb,aADA;AAELe,MAAAA,OAAO,EAAEN;AAFJ,KAAD,CAAR;AAIH,GATD,CA7BwB,CAwCxB;;;AACA,QAAMS,YAAY,GAAE,MAAI;AACpBP,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEZ;AADD,KAAD,CAAR;AAGH,GAJD,CAzCwB,CA+CxB;;;AACA,QAAMkB,UAAU,GAAGC,MAAM,IAAG;AACxBT,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEX,cADD;AAELa,MAAAA,OAAO,EAAEK;AAFJ,KAAD,CAAR;AAKH,GAND,CAhDwB,CAwDxB;;;AACA,QAAMC,YAAY,GAAGD,MAAM,IAAE;AACzBT,IAAAA,QAAQ;AACX,GAFD;;AAIA,sBAEI,oBAAC,YAAD,CAAc,QAAd;AACI,IAAA,KAAK,EAAE;AACHL,MAAAA,KAAK,EAAEI,KAAK,CAACJ,KADV;AAEHC,MAAAA,UAAU,EAAEG,KAAK,CAACH,UAFf;AAGHC,MAAAA,eAAe,EAAEE,KAAK,CAACF,eAHpB;AAIHC,MAAAA,IAAI,EAAEC,KAAK,CAACD,IAJT;AAKHG,MAAAA,YALG;AAMHE,MAAAA,YANG;AAOHE,MAAAA,WAPG;AAQHE,MAAAA,YARG;AASHC,MAAAA,UATG;AAUHE,MAAAA;AAVG,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAcKjB,KAAK,CAACkB,QAdX,CAFJ;AAmBH,CAhFD;;AAkFA,eAAenB,UAAf","sourcesContent":["import React,{useReducer} from 'react';\r\nimport {v4} from 'uuid';\r\nimport ObrasContext from './obrasContext';\r\nimport obrasReducer from './obrasReducer';\r\n\r\nimport {FORMULARIO_OBRA, OBTENER_OBRAS, AGREGAR_OBRAS, VALIDAR_FORMULARIO, OBRAS_ACTUALES\r\n    \r\n} from '../../types/index';\r\n\r\nconst ObrasState = props => {\r\n    \r\n    const initialState={\r\n        obras:[],\r\n        formulario: false,\r\n        errorformulario:false,\r\n        obra:null,\r\n    }\r\n\r\n    // dispatch parra ejecutar las acciones\r\n    const [state, dispatch] = useReducer(obrasReducer, initialState)\r\n\r\n    // series de funciones para el CRUD\r\n    const mostrarObras = ()=>{\r\n        dispatch({\r\n            type:FORMULARIO_OBRA,\r\n        })\r\n    }\r\n    const obras = []\r\n    \r\n    // obtenerObras nueva obra\r\n    const obtenerObras = ()=>{\r\n        dispatch({\r\n            type: OBTENER_OBRAS,\r\n            payload: obras\r\n        })\r\n    }\r\n\r\n    // agregar una obra\r\n    const agregarObra = obra=>{\r\n        // obtiene un id cada obra\r\n        obra.id = v4();\r\n\r\n        // insertar la obra en el state\r\n        dispatch({\r\n            type:AGREGAR_OBRAS,\r\n            payload: obra\r\n        })\r\n    }\r\n\r\n    // validar formulario\r\n    const mostrarError= ()=>{\r\n        dispatch({\r\n            type: VALIDAR_FORMULARIO,\r\n        })\r\n    }    \r\n\r\n    // selecciona el proyecto que el usuario hizo click\r\n    const obraActual = obraId =>{\r\n        dispatch({\r\n            type: OBRAS_ACTUALES,\r\n            payload: obraId,\r\n\r\n        })\r\n    }\r\n\r\n    // eliminar proyecto\r\n    const eliminarObra = obraId=>{\r\n        dispatch\r\n    }\r\n\r\n    return ( \r\n\r\n        <ObrasContext.Provider\r\n            value={{\r\n                obras: state.obras,\r\n                formulario: state.formulario,\r\n                errorformulario: state.errorformulario,\r\n                obra: state.obra,\r\n                mostrarObras,\r\n                obtenerObras,\r\n                agregarObra,\r\n                mostrarError,\r\n                obraActual,\r\n                eliminarObra,\r\n            }}\r\n        >\r\n            {props.children}\r\n        </ObrasContext.Provider>\r\n     );\r\n}\r\n \r\nexport default ObrasState;\r\n"]},"metadata":{},"sourceType":"module"}