{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\Tickets_Reisa_React\\\\cliente\\\\src\\\\context\\\\obras\\\\obrasState.js\";\nimport React, { useReducer } from 'react';\nimport { v4 } from 'uuid';\nimport obrasContext from './obrasContext';\nimport obrasReducer from './obrasReducer';\nimport { FORMULARIO_OBRA, OBTENER_OBRAS, AGREGAR_OBRAS, VALIDAR_FORMULARIO, OBRAS_ACTUALES, BORRAR_OBRAS } from '../../types/index';\n\nconst ObrasState = props => {\n  const initialState = {\n    obras: [],\n    formulario: false,\n    errorformulario: false,\n    obra: null\n  }; // dispatch parra ejecutar las acciones\n\n  const [state, dispatch] = useReducer(obrasReducer, initialState); // series de funciones para el CRUD\n\n  const mostrarObras = () => {\n    dispatch({\n      type: FORMULARIO_OBRA\n    });\n  };\n\n  const obras = [{\n    id: 1,\n    nombre: 'Anteus'\n  }]; // obtenerObras nueva obra\n\n  const obtenerObras = () => {\n    dispatch({\n      type: OBTENER_OBRAS,\n      payload: obras\n    });\n  }; // agregar una obra\n\n\n  const agregarObra = obra => {\n    // obtiene un id cada obra\n    obra.id = v4(); // insertar la obra en el state\n\n    dispatch({\n      type: AGREGAR_OBRAS,\n      payload: obra\n    });\n  }; // validar formulario\n\n\n  const mostrarError = () => {\n    dispatch({\n      type: VALIDAR_FORMULARIO\n    });\n  }; // selecciona el proyecto que el usuario hizo click\n\n\n  const obraActual = obraId => {\n    dispatch({\n      type: OBRAS_ACTUALES,\n      payload: obraId\n    });\n  }; // eliminar proyecto\n\n\n  const eliminarObra = obraId => {\n    dispatch({\n      type: BORRAR_OBRAS,\n      payload: obraId\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(obrasContext.Provider, {\n    value: {\n      obras: state.obras,\n      formulario: state.formulario,\n      errorformulario: state.errorformulario,\n      obra: state.obra,\n      mostrarObras,\n      obtenerObras,\n      agregarObra,\n      mostrarError,\n      obraActual,\n      eliminarObra\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default ObrasState;","map":{"version":3,"sources":["C:/Users/User/Documents/GitHub/Tickets_Reisa_React/cliente/src/context/obras/obrasState.js"],"names":["React","useReducer","v4","obrasContext","obrasReducer","FORMULARIO_OBRA","OBTENER_OBRAS","AGREGAR_OBRAS","VALIDAR_FORMULARIO","OBRAS_ACTUALES","BORRAR_OBRAS","ObrasState","props","initialState","obras","formulario","errorformulario","obra","state","dispatch","mostrarObras","type","id","nombre","obtenerObras","payload","agregarObra","mostrarError","obraActual","obraId","eliminarObra","children"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,UAAd,QAA+B,OAA/B;AACA,SAAQC,EAAR,QAAiB,MAAjB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,SACIC,eADJ,EAEIC,aAFJ,EAGIC,aAHJ,EAIIC,kBAJJ,EAKIC,cALJ,EAMIC,YANJ,QAOO,mBAPP;;AASA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAExB,QAAMC,YAAY,GAAC;AACfC,IAAAA,KAAK,EAAC,EADS;AAEfC,IAAAA,UAAU,EAAE,KAFG;AAGfC,IAAAA,eAAe,EAAC,KAHD;AAIfC,IAAAA,IAAI,EAAC;AAJU,GAAnB,CAFwB,CASxB;;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBlB,UAAU,CAACG,YAAD,EAAeS,YAAf,CAApC,CAVwB,CAYxB;;AACA,QAAMO,YAAY,GAAG,MAAI;AACrBD,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAChB;AADA,KAAD,CAAR;AAGH,GAJD;;AAKA,QAAMS,KAAK,GAAG,CACV;AAACQ,IAAAA,EAAE,EAAC,CAAJ;AAAMC,IAAAA,MAAM,EAAC;AAAb,GADU,CAAd,CAlBwB,CAsBxB;;AACA,QAAMC,YAAY,GAAG,MAAI;AACrBL,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEf,aADD;AAELmB,MAAAA,OAAO,EAAEX;AAFJ,KAAD,CAAR;AAIH,GALD,CAvBwB,CA8BxB;;;AACA,QAAMY,WAAW,GAAGT,IAAI,IAAE;AACtB;AACAA,IAAAA,IAAI,CAACK,EAAL,GAAUpB,EAAE,EAAZ,CAFsB,CAItB;;AACAiB,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAACd,aADA;AAELkB,MAAAA,OAAO,EAAER;AAFJ,KAAD,CAAR;AAIH,GATD,CA/BwB,CA0CxB;;;AACA,QAAMU,YAAY,GAAE,MAAI;AACpBR,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEb;AADD,KAAD,CAAR;AAGH,GAJD,CA3CwB,CAiDxB;;;AACA,QAAMoB,UAAU,GAAGC,MAAM,IAAG;AACxBV,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEZ,cADD;AAELgB,MAAAA,OAAO,EAAEI;AAFJ,KAAD,CAAR;AAKH,GAND,CAlDwB,CA0DxB;;;AACA,QAAMC,YAAY,GAAGD,MAAM,IAAE;AACzBV,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAACX,YADA;AAELe,MAAAA,OAAO,EAAEI;AAFJ,KAAD,CAAR;AAIH,GALD;;AAOA,sBAEI,oBAAC,YAAD,CAAc,QAAd;AACI,IAAA,KAAK,EAAE;AACHf,MAAAA,KAAK,EAAEI,KAAK,CAACJ,KADV;AAEHC,MAAAA,UAAU,EAAEG,KAAK,CAACH,UAFf;AAGHC,MAAAA,eAAe,EAAEE,KAAK,CAACF,eAHpB;AAIHC,MAAAA,IAAI,EAAEC,KAAK,CAACD,IAJT;AAKHG,MAAAA,YALG;AAMHI,MAAAA,YANG;AAOHE,MAAAA,WAPG;AAQHC,MAAAA,YARG;AASHC,MAAAA,UATG;AAUHE,MAAAA;AAVG,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAcKlB,KAAK,CAACmB,QAdX,CAFJ;AAmBH,CArFD;;AAuFA,eAAepB,UAAf","sourcesContent":["import React,{useReducer} from 'react';\r\nimport {v4} from 'uuid';\r\nimport obrasContext from './obrasContext';\r\nimport obrasReducer from './obrasReducer';\r\n\r\nimport {\r\n    FORMULARIO_OBRA, \r\n    OBTENER_OBRAS,\r\n    AGREGAR_OBRAS,\r\n    VALIDAR_FORMULARIO,\r\n    OBRAS_ACTUALES,\r\n    BORRAR_OBRAS\r\n} from '../../types/index';\r\n\r\nconst ObrasState = props => {\r\n    \r\n    const initialState={\r\n        obras:[],\r\n        formulario: false,\r\n        errorformulario:false,\r\n        obra:null,\r\n    }\r\n\r\n    // dispatch parra ejecutar las acciones\r\n    const [state, dispatch] = useReducer(obrasReducer, initialState)\r\n\r\n    // series de funciones para el CRUD\r\n    const mostrarObras = ()=>{\r\n        dispatch({\r\n            type:FORMULARIO_OBRA,\r\n        })\r\n    }\r\n    const obras = [\r\n        {id:1,nombre:'Anteus'}\r\n    ]\r\n    \r\n    // obtenerObras nueva obra\r\n    const obtenerObras = ()=>{\r\n        dispatch({\r\n            type: OBTENER_OBRAS,\r\n            payload: obras\r\n        })\r\n    }\r\n\r\n    // agregar una obra\r\n    const agregarObra = obra=>{\r\n        // obtiene un id cada obra\r\n        obra.id = v4();\r\n\r\n        // insertar la obra en el state\r\n        dispatch({\r\n            type:AGREGAR_OBRAS,\r\n            payload: obra\r\n        })\r\n    }\r\n\r\n    // validar formulario\r\n    const mostrarError= ()=>{\r\n        dispatch({\r\n            type: VALIDAR_FORMULARIO,\r\n        })\r\n    }    \r\n\r\n    // selecciona el proyecto que el usuario hizo click\r\n    const obraActual = obraId =>{\r\n        dispatch({\r\n            type: OBRAS_ACTUALES,\r\n            payload: obraId,\r\n\r\n        })\r\n    }\r\n\r\n    // eliminar proyecto\r\n    const eliminarObra = obraId=>{\r\n        dispatch({\r\n            type:BORRAR_OBRAS,\r\n            payload: obraId\r\n        })\r\n    }\r\n\r\n    return ( \r\n\r\n        <obrasContext.Provider\r\n            value={{\r\n                obras: state.obras,\r\n                formulario: state.formulario,\r\n                errorformulario: state.errorformulario,\r\n                obra: state.obra,\r\n                mostrarObras,\r\n                obtenerObras,\r\n                agregarObra,\r\n                mostrarError,\r\n                obraActual,\r\n                eliminarObra,\r\n            }}\r\n        >\r\n            {props.children}\r\n        </obrasContext.Provider>\r\n     );\r\n}\r\n \r\nexport default ObrasState;\r\n"]},"metadata":{},"sourceType":"module"}